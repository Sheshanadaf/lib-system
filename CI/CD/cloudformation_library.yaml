AWSTemplateFormatVersion: '2010-09-09'

Resources:

  # ✅ AWS CodePipeline (CI/CD)
  LibraryCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: LibraryPipeline
      RoleArn: arn:aws:iam::583966366465:role/CodePipelineRole  # Replace with actual ARN
      ArtifactStore:
        Type: S3
        Location: !Ref FrontendS3Bucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection  # ✅ Use AWS CodeStar instead of OAuth
                Version: '1'
              Configuration:
                ConnectionArn: arn:aws:codeconnections:us-east-1:583966366465:connection/31abb4de-0ade-418a-baff-4c4a07cad0de  # Replace with actual CodeStar connection ARN
                FullRepositoryId: https://github.com/Sheshanadaf/CLoud_project_aws.git
                BranchName: main
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: BuildFrontend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref LibraryCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 2

        - Name: Deploy
          Actions:
            - Name: DeployToEC2
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ApplicationName: !Ref LibraryCodeDeploy
                DeploymentGroupName: !Ref LibraryDeploymentGroup
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 3

  # ✅ AWS CodeBuild (CI/CD Build Stage)
  LibraryCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: LibraryCodeBuild
      ServiceRole: arn:aws:iam::583966366465:role/CodePipelineRole  # Replace with actual ARN
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      BuildSpec: |
        version: 0.2
        phases:
          install:
            commands:
              - npm install
          build:
            commands:
              - npm run build
        artifacts:
          files:
            - '**/*'

  # ✅ AWS CodeDeploy Application
  LibraryCodeDeploy:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: LibraryApp

  # ✅ AWS CodeDeploy Deployment Group
  LibraryDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref LibraryCodeDeploy
      DeploymentGroupName: LibraryDeploymentGroup
      ServiceRoleArn: arn:aws:iam::583966366465:role/CodePipelineRole  # Replace with actual ARN
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      Ec2TagFilters:
        - Key: Name
          Value: LibraryEC2
          Type: KEY_AND_VALUE
      AutoScalingGroups:
        - !Ref AutoScalingGroup  # Attach Auto Scaling Group
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: ALBTargetGroup  # Attach to ALB Target Group
